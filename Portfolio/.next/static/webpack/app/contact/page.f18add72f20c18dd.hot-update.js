"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/contact/page",{

/***/ "(app-pages-browser)/./src/views/contact/canvasH.jsx":
/*!***************************************!*\
  !*** ./src/views/contact/canvasH.jsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DrawCircle: () => (/* binding */ DrawCircle)\n/* harmony export */ });\nconst gitImageSrc = \"/Github.svg\";\nlet gitImage;\nif (true) {\n    gitImage = new window.Image();\n    gitImage.src = \"/Github.svg\";\n}\nfunction DrawCircle(hexColor, x, y, radius, ctx, Type) {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fillStyle = \"rgb(5, 120, 250)\";\n    ctx.fill();\n    function drawImage() {\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        ctx.clip();\n        ctx.drawImage(gitImage, x - radius, y - radius, radius * 2, radius * 2);\n        ctx.restore();\n    }\n    function DrawLi() {\n        ctx.fillStyle = \"white\";\n        ctx.font = \"\".concat(radius, \"px Protest Guerrilla\");\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(\"in\", x, y);\n    }\n    if (Type === \"Github\") {\n        if (gitImage.complete) {\n            drawImage();\n        } else {\n            gitImage.onload = drawImage;\n        }\n    } else {\n        DrawLi();\n    }\n}\n_c = DrawCircle;\nvar _c;\n$RefreshReg$(_c, \"DrawCircle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy92aWV3cy9jb250YWN0L2NhbnZhc0guanN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxjQUFjO0FBRXBCLElBQUlDO0FBQ0osSUFBSSxJQUE2QixFQUFFO0lBQ2pDQSxXQUFXLElBQUlDLE9BQU9DLEtBQUs7SUFDM0JGLFNBQVNHLEdBQUcsR0FBRztBQUNqQjtBQUVPLFNBQVNDLFdBQVdDLFFBQVEsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxJQUFJO0lBQzFERCxJQUFJRSxTQUFTO0lBQ2JGLElBQUlHLEdBQUcsQ0FBQ04sR0FBR0MsR0FBR0MsUUFBUSxHQUFHSyxLQUFLQyxFQUFFLEdBQUc7SUFDbkNMLElBQUlNLFNBQVM7SUFDYk4sSUFBSU8sU0FBUyxHQUFHO0lBQ2hCUCxJQUFJUSxJQUFJO0lBRVIsU0FBU0M7UUFDUFQsSUFBSVUsSUFBSTtRQUNSVixJQUFJRSxTQUFTO1FBQ2JGLElBQUlHLEdBQUcsQ0FBQ04sR0FBR0MsR0FBR0MsUUFBUSxHQUFHSyxLQUFLQyxFQUFFLEdBQUc7UUFDbkNMLElBQUlNLFNBQVM7UUFDYk4sSUFBSVcsSUFBSTtRQUNSWCxJQUFJUyxTQUFTLENBQUNsQixVQUFVTSxJQUFJRSxRQUFRRCxJQUFJQyxRQUFRQSxTQUFTLEdBQUdBLFNBQVM7UUFDckVDLElBQUlZLE9BQU87SUFDYjtJQUVBLFNBQVNDO1FBQ1BiLElBQUlPLFNBQVMsR0FBRztRQUNoQlAsSUFBSWMsSUFBSSxHQUFHLEdBQVUsT0FBUGYsUUFBTztRQUNyQkMsSUFBSWUsU0FBUyxHQUFHO1FBQ2hCZixJQUFJZ0IsWUFBWSxHQUFHO1FBQ25CaEIsSUFBSWlCLFFBQVEsQ0FBQyxNQUFNcEIsR0FBR0M7SUFDeEI7SUFFQSxJQUFJRyxTQUFTLFVBQVU7UUFDckIsSUFBSVYsU0FBUzJCLFFBQVEsRUFBRTtZQUNyQlQ7UUFDRixPQUFPO1lBQ0xsQixTQUFTNEIsTUFBTSxHQUFHVjtRQUNwQjtJQUNGLE9BQU87UUFDTEk7SUFDRjtBQUNGO0tBbENnQmxCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEthZGVuXFxPbmVEcml2ZVxcRGVza3RvcFxcQ29kZS5oZWhlXFxQb3J0Zm9saW9cXFBvcnRmb2xpb1xcc3JjXFx2aWV3c1xcY29udGFjdFxcY2FudmFzSC5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2l0SW1hZ2VTcmMgPSBcIi9HaXRodWIuc3ZnXCI7XHJcblxyXG5sZXQgZ2l0SW1hZ2U7XHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgZ2l0SW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKCk7XHJcbiAgZ2l0SW1hZ2Uuc3JjID0gXCIvR2l0aHViLnN2Z1wiO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gRHJhd0NpcmNsZShoZXhDb2xvciwgeCwgeSwgcmFkaXVzLCBjdHgsIFR5cGUpIHtcclxuICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgY3R4LmFyYyh4LCB5LCByYWRpdXMsIDAsIE1hdGguUEkgKiAyKTtcclxuICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgY3R4LmZpbGxTdHlsZSA9IFwicmdiKDUsIDEyMCwgMjUwKVwiO1xyXG4gIGN0eC5maWxsKCk7XHJcblxyXG4gIGZ1bmN0aW9uIGRyYXdJbWFnZSgpIHtcclxuICAgIGN0eC5zYXZlKCk7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHgsIHksIHJhZGl1cywgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgY3R4LmNsaXAoKTtcclxuICAgIGN0eC5kcmF3SW1hZ2UoZ2l0SW1hZ2UsIHggLSByYWRpdXMsIHkgLSByYWRpdXMsIHJhZGl1cyAqIDIsIHJhZGl1cyAqIDIpO1xyXG4gICAgY3R4LnJlc3RvcmUoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIERyYXdMaSgpIHtcclxuICAgIGN0eC5maWxsU3R5bGUgPSBcIndoaXRlXCI7XHJcbiAgICBjdHguZm9udCA9IGAke3JhZGl1c31weCBQcm90ZXN0IEd1ZXJyaWxsYWA7XHJcbiAgICBjdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcclxuICAgIGN0eC50ZXh0QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xyXG4gICAgY3R4LmZpbGxUZXh0KFwiaW5cIiwgeCwgeSk7XHJcbiAgfVxyXG5cclxuICBpZiAoVHlwZSA9PT0gXCJHaXRodWJcIikge1xyXG4gICAgaWYgKGdpdEltYWdlLmNvbXBsZXRlKSB7XHJcbiAgICAgIGRyYXdJbWFnZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZ2l0SW1hZ2Uub25sb2FkID0gZHJhd0ltYWdlO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBEcmF3TGkoKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImdpdEltYWdlU3JjIiwiZ2l0SW1hZ2UiLCJ3aW5kb3ciLCJJbWFnZSIsInNyYyIsIkRyYXdDaXJjbGUiLCJoZXhDb2xvciIsIngiLCJ5IiwicmFkaXVzIiwiY3R4IiwiVHlwZSIsImJlZ2luUGF0aCIsImFyYyIsIk1hdGgiLCJQSSIsImNsb3NlUGF0aCIsImZpbGxTdHlsZSIsImZpbGwiLCJkcmF3SW1hZ2UiLCJzYXZlIiwiY2xpcCIsInJlc3RvcmUiLCJEcmF3TGkiLCJmb250IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZmlsbFRleHQiLCJjb21wbGV0ZSIsIm9ubG9hZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/views/contact/canvasH.jsx\n"));

/***/ })

});